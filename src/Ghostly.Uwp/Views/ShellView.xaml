<Page
    x:Class="Ghostly.Uwp.Views.ShellView"
    x:Name="Page"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:converters="using:Ghostly.Uwp.Converters"
    xmlns:community="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:controls="using:Ghostly.Uwp.Controls"
    xmlns:animations="using:Microsoft.Toolkit.Uwp.UI.Animations"
    xmlns:iconPacks="using:MahApps.Metro.IconPacks"
    xmlns:strings="using:Ghostly.Uwp.Strings"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    mc:Ignorable="d"
    muxc:BackdropMaterial.ApplyToRootOrPageBackground="True">

    <Page.Resources>
        <converters:InverseBooleanConverter x:Key="InverseBool" />
        <converters:BooleanToBoldConverter x:Key="BooleanToBold" />

        <DataTemplate x:Key="CategoryItemTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="48" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <!-- Emoji -->
                <TextBlock Grid.Column="0" Text="{Binding Emoji}"
                           FontFamily="Segoe UI Emoji"
                           Visibility="{Binding Emoji, Converter={StaticResource VisibleWhenNotEmpty}}"
                           VerticalAlignment="Center" HorizontalAlignment="Center"
                           Opacity="{Binding Muted, Mode=OneWay, Converter={StaticResource MutedOpacity}, ConverterParameter=0.3}"
                           FontSize="16" ToolTipService.ToolTip="{Binding Name}"/>
                <!-- Glyph -->
                <FontIcon x:Name="Glyph" Grid.Column="0" Glyph="{Binding Glyph}"
                          FontFamily="Segoe MDL2 Assets"
                          Foreground="{Binding Converter={StaticResource NavigationItemForeground}}"
                          Visibility="{Binding Emoji, Converter={StaticResource VisibleWhenEmpty}}"
                          VerticalAlignment="Center" HorizontalAlignment="Center"
                          Opacity="{Binding Muted, Mode=OneWay, Converter={StaticResource MutedOpacity}, ConverterParameter=0.3}"
                          FontSize="16" ToolTipService.ToolTip="{Binding Name}" />

                <iconPacks:PackIconOcticons
                    Grid.Column="0"
                    Width="12" Height="12"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Foreground="{ThemeResource WarningText}"
                    Margin="16,12,0,0"
                    Visibility="{Binding HasProblem, Converter={StaticResource BoolToVisibility}}"
                    Kind="Alert" />

                <Grid Grid.Column="0" Margin="0,8,0,0"
                      Visibility="{Binding ShowUnreadIndicators.Value, ElementName=Page, Converter={StaticResource BoolToVisibility}}">
                    <Border Margin="22,0,0,0"
                            BorderBrush="{ThemeResource NotificationBadgeBorder}" BorderThickness="1"
                            Visibility="{Binding ShowIndicator, Mode=OneWay, Converter={StaticResource BoolToVisibility}}"
                            Background="{ThemeResource NotificationBadge}" CornerRadius="999" Width="17" Height="17">
                        <TextBlock FontSize="9" VerticalAlignment="Center" HorizontalAlignment="Center"
                                   Margin="-1,-2,0,0"
                                   Text="{Binding CappedCount}"
                                   Foreground="{ThemeResource NotificationBadgeText}"/>
                    </Border>
                </Grid>

                <TextBlock x:Name="Text" Grid.Column="1" Text="{Binding Name}"
                           Foreground="{Binding Converter={StaticResource NavigationItemForeground}}"
                           VerticalAlignment="Center"
                           Opacity="{Binding Muted, Mode=OneWay, Converter={StaticResource MutedOpacity}, ConverterParameter=0.5}"
                           TextWrapping="NoWrap" Margin="0,0,0,0" Style="{StaticResource BodyTextBlockStyle}" />
                
                <TextBlock Grid.Column="2" Text="{Binding Count, Mode=OneWay}" VerticalAlignment="Center"
                           Visibility="{Binding Count, Mode=OneWay, Converter={StaticResource VisibleWhenNotZero}}"
                           TextWrapping="NoWrap" Margin="0,0,16,0" Foreground="Gray" FontSize="12" />
            </Grid>
        </DataTemplate>

    </Page.Resources>

    <Grid x:Name="LayoutRoot">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1024" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="RootSplitView.DisplayMode" Value="CompactInline" />
                        <Setter Target="RootSplitView.IsPaneOpen" Value="True" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="720" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="RootSplitView.DisplayMode" Value="CompactOverlay" />
                        <Setter Target="RootSplitView.IsPaneOpen" Value="False" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="320" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="RootSplitView.DisplayMode" Value="Overlay" />
                        <Setter Target="RootSplitView.IsPaneOpen" Value="False" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <SplitView x:Name="RootSplitView"
                   DisplayMode="CompactInline"
                   OpenPaneLength="220"
                   PaneBackground="Transparent"
                   IsTabStop="False">

            <SplitView.Pane>
                <Grid 
                      BorderBrush="{ThemeResource RegionBorderBrush}"
                      BorderThickness="0,0,1,0">

                    <ScrollViewer HorizontalScrollMode="Disabled" VerticalScrollBarVisibility="Auto"
                                  Margin="{x:Bind ToggleOffset, Mode=OneWay, Converter={StaticResource HeightToThickness}}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <!-- Toggle button -->
                            <ToggleButton x:Name="TogglePaneButton"
                                Grid.Row="0" TabIndex="1"
                                Checked="{x:Bind CheckTogglePaneButtonSizeChanged}"
                                Unchecked="{x:Bind CheckTogglePaneButtonSizeChanged}"
                                IsChecked="{Binding IsPaneOpen, ElementName=RootSplitView, Mode=TwoWay}"
                                AutomationProperties.Name="{strings:Localize Key=General_Menu}"
                                ToolTipService.ToolTip="{strings:Localize Key=General_Menu}"
                                Style="{StaticResource SplitViewTogglePaneButtonStyle}" />

                            <!-- Categories and filters -->
                            <controls:NavigationListView x:Name="CategoryListView"
                                Grid.Row="1" TabIndex="3"
                                CanReorderItems="True" CanDragItems="True" AllowDrop="True"
                                DragItemsCompleted="CategoryListView_DragItemsCompleted"
                                ItemsSource="{x:Bind Navigation.Categories, Mode=OneWay}"
                                SelectedItem="{x:Bind Navigation.Categories.Selected.Value, Mode=TwoWay}"
                                ItemTemplate="{StaticResource CategoryItemTemplate}">
                                <controls:NavigationListView.Resources>
                                    <SolidColorBrush x:Key="ListViewItemBackgroundSelected" Color="{ThemeResource SystemListMediumColor}" />
                                    <SolidColorBrush x:Key="ListViewItemBackgroundSelectedPressed" Color="{ThemeResource SystemListMediumColor}" />
                                    <SolidColorBrush x:Key="ListViewItemBackgroundSelectedPointerOver" Color="{ThemeResource SystemListMediumColor}" />
                                </controls:NavigationListView.Resources>
                                <controls:NavigationListView.ContextFlyout>
                                    <MenuFlyout x:Name="Menu" Opening="Menu_Opening">
                                        <MenuFlyoutItem x:Name="MenuEdit" Icon="Edit" Click="MenuEdit_Click" />
                                        <MenuFlyoutItem x:Name="MenuMarkAllAsRead" Icon="Read" Text="{strings:Localize Key=Shell_MarkAllAsRead}" Click="MenuMarkAllAsRead_Click" />
                                        <MenuFlyoutItem x:Name="MenuArchiveAll" Text="{strings:Localize Key=Shell_ArchiveAll}" Click="MenuArchiveAll_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE7B8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>
                                        <MenuFlyoutItem x:Name="MenuDelete" Icon="Delete" Click="MenuDelete_Click" Foreground="#DB3A29" />
                                    </MenuFlyout>
                                </controls:NavigationListView.ContextFlyout>
                            </controls:NavigationListView>

                            <!-- Create -->
                            <controls:NavigationListView x:Name="CreateListView"
                                Grid.Row="3" Margin="0" TabIndex="4"
                                ShowTopBorder="True"
                                SelectedItem="{x:Bind Navigation.Commands.Selected.Value, Mode=TwoWay}"
                                ItemsSource="{x:Bind Navigation.Commands, Mode=OneWay}"
                                ItemTemplate="{StaticResource CategoryItemTemplate}">
                                <controls:NavigationListView.Resources>
                                    <SolidColorBrush x:Key="ListViewItemBackgroundSelected" Color="{ThemeResource NavigationSelectedBrush}" />
                                    <SolidColorBrush x:Key="ListViewItemBackgroundSelectedPressed" Color="{ThemeResource SystemListMediumColor}" />
                                    <SolidColorBrush x:Key="ListViewItemBackgroundSelectedPointerOver" Color="{ThemeResource SystemListMediumColor}" />
                                </controls:NavigationListView.Resources>
                            </controls:NavigationListView>

                            <!-- Menu -->
                            <controls:NavigationListView x:Name="MenuListView"
                                ShowTopBorder="True"
                                Grid.Row="4" Margin="0" TabIndex="4"
                                SelectedItem="{x:Bind Navigation.Menu.Selected.Value, Mode=TwoWay}"
                                ItemsSource="{x:Bind Navigation.Menu, Mode=OneWay}"
                                ItemTemplate="{StaticResource CategoryItemTemplate}">
                                <controls:NavigationListView.Resources>
                                    <SolidColorBrush x:Key="ListViewItemBackgroundSelected" Color="{ThemeResource SystemListMediumColor}" />
                                    <SolidColorBrush x:Key="ListViewItemBackgroundSelectedPressed" Color="{ThemeResource SystemListMediumColor}" />
                                    <SolidColorBrush x:Key="ListViewItemBackgroundSelectedPointerOver" Color="{ThemeResource SystemListMediumColor}" />
                                </controls:NavigationListView.Resources>
                            </controls:NavigationListView>
                        </Grid>
                    </ScrollViewer>
                </Grid>
            </SplitView.Pane>
            <SplitView.Content>
                <Grid>
                    <!-- Frame -->
                    <Frame x:Name="NavigationFrame" Margin="0"/>

                    <!-- Status bar -->
                    <controls:StatusControl
                        Message="{Binding Status.Message.Value, Mode=OneWay}"
                        Percentage="{Binding Status.Percentage.Value, Mode=OneWay}" />

                    <!-- In app notifications -->
                    <community:InAppNotification x:Name="InAppNotification" />
                </Grid>
            </SplitView.Content>
        </SplitView>

        <!-- Window Title -->
        <StackPanel Orientation="Horizontal"
                   Visibility="{x:Bind Titlebar.Visibility, Mode=OneWay}"
                   Margin="{x:Bind Titlebar.Position, Mode=OneWay}"
                   animations:Implicit.Animations="{StaticResource LayoutImplicitAnimations}">
            <TextBlock x:Name="windowTitle" 
                   VerticalAlignment="Top"
                   Text="Ghostly" />

            <animations:Implicit.ShowAnimations>
                <animations:OpacityAnimation Duration="0:0:0.3" From="0" To="1.0"></animations:OpacityAnimation>
            </animations:Implicit.ShowAnimations>
            <animations:Implicit.HideAnimations>
                <animations:ScalarAnimation Target="Opacity" Duration="0:0:0.3" To="0.0"></animations:ScalarAnimation>
            </animations:Implicit.HideAnimations>

        </StackPanel>

        <!-- Disabled -->
        <community:Loading x:Name="PurchasingControl" IsLoading="{Binding AppDisabled.Value}"
                          VerticalContentAlignment="Bottom" HorizontalContentAlignment="Right">
            <community:Loading.Background>
                <SolidColorBrush Color="Black" Opacity="0.5" />
            </community:Loading.Background>
            <ProgressRing IsActive="True" Width="28" Height="28" Margin="0,0,12,12" />
        </community:Loading>

        <!-- Progress -->
        <community:Loading IsLoading="{Binding Progress.Show.Value}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">
            <community:Loading.Background>
                <SolidColorBrush Color="Black" Opacity="0.3" />
            </community:Loading.Background>
            <community:DropShadowPanel BlurRadius="48.0" ShadowOpacity="0.90" OffsetX="0" OffsetY="0" Color="Black">
                <Border Background="{ThemeResource RegionColor}" Width="400" Height="100" CornerRadius="4"
                        Padding="25" BorderThickness="1,1,1,1">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <controls:SmartProgressBar Grid.Row="0" Percentage="{Binding Progress.Percentage.Value, Mode=OneWay}" />
                        <TextBlock Grid.Row="1" Text="{Binding Progress.Message.Value, Mode=OneWay}" Margin="0,10,0,0" HorizontalAlignment="Center" />
                    </Grid>
                </Border>
            </community:DropShadowPanel>
        </community:Loading>

    </Grid>

</Page>
